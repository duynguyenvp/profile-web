name: CICD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_publish_image:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} 
             -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USER }}/somethingaboutmeweb:latest -t ${{ secrets.DOCKER_USER }}/somethingaboutmeweb:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_USER }}/somethingaboutmeweb:latest
  deploy:
    needs: build_and_publish_image
    runs-on: self-hosted
    steps:
      - name: pull image
        run: docker pull ${{ secrets.DOCKER_USER }}/somethingaboutmeweb:latest
      - name: stop and remove all containers based on image name
        run: |
          echo "starting ...."
          for id in $(docker images | awk '{ print $1,$3 }' | grep ${{ secrets.DOCKER_USER }}/somethingaboutmeweb | awk '{print $2 }')
          do
            containerid=`echo $(docker ps -a -q --filter ancestor=$id --format="{{.ID}}")`
            echo "stopping the container $containerid"
            docker stop $containerid || true
            echo "removing the container $containerid"
            docker rm $containerid || true
          done
        continue-on-error: true
      - name: docker run
        run: docker run -it -d -p 8080:8080 --net="web" -e NODE_ENV=production -e DOMAIN_API="http://somethingaboutme.info:8443/api" -v /$HOME/Data/web/upload:/app/upload -v /$HOME/Data/web/Logs:/app/Logs ${{ secrets.DOCKER_USER }}/somethingaboutmeweb:latest
      - name: remove all untagged images
        run: docker image prune -f

